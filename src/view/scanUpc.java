/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionDb;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Padovano
 */
public class scanUpc extends javax.swing.JInternalFrame {

    private final ConnectionDb conn=ConnectionDb.instance();
    /**
     * Creates new form scanUpc
     */
    public scanUpc() {
        initComponents();
        listData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PO = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        upcScan = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        upcUnscan = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        DATA = new javax.swing.JTable();

        setClosable(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Po");

        jLabel2.setText("Scan  upc");

        upcScan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                upcScanKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                upcScanKeyTyped(evt);
            }
        });

        jLabel3.setText("Unscan  upc");
        jLabel3.setVisible(false);

        upcUnscan.setVisible(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(PO)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upcScan, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 517, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(upcUnscan))
                .addGap(154, 154, 154))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upcUnscan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(upcScan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DATA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PO", "UPC", "QTY SCAN", "Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(DATA);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 527, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void upcScanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upcScanKeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            
            if(upcScan.getText().trim().isEmpty()){
                JOptionPane.showInternalMessageDialog(this, "please fill out this field", "upc empty", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(!PO.getText().trim().isEmpty()){
            if(!po_exist(PO.getText().trim())){
                JOptionPane.showInternalMessageDialog(this, "please enter a valid PO", "PO not exist", JOptionPane.ERROR_MESSAGE);
                return;
            }
            }
            if(!upcExists(upcScan.getText().trim(),PO.getText().trim())){
                JOptionPane.showInternalMessageDialog(this, "this Upc is not exist", "UPC Invalid", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if(saveUpc(upcScan.getText().trim(),PO.getText().trim())){
                listData();
                upcScan.setText("");
            }
        }
    }//GEN-LAST:event_upcScanKeyReleased

    private void upcScanKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_upcScanKeyTyped
        // TODO add your handling code here:
        
    }//GEN-LAST:event_upcScanKeyTyped

    private boolean po_exist(String po){
        String requete="select count(*) n from shoporder where ordref_147=?";
        ResultSet rs =conn.select(requete, po);
        try {
            while(rs.next()){
                if(rs.getInt("n")>0)
                    return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(scanUpc.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private boolean saveUpc(String upc,String po){
        if(po.trim().isEmpty())
            po="";
        String requete="insert into upc_scan(po, upc) values(?,?)";
        return conn.Update(requete, 0, po,upc);
    }
    
    private boolean upcExists(String upc,String po){
        ResultSet rs;
        String requete="select count(*) n from po_upc where upc=? ";
        if(!po.trim().isEmpty()){
            requete+="and ordref_147=? ";
            rs =conn.select(requete,upc, po);
        }else
            rs =conn.select(requete,upc);
        try {
            while(rs.next()){
                if(rs.getInt("n")>0)
                    return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(scanUpc.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    
    private void listData(){
        DefaultTableModel tbm = (DefaultTableModel) DATA.getModel();
    tbm.setRowCount(0);
        String requete="select * from scanned_upc";
        ResultSet rs=conn.select(requete);
        try {
            while(rs.next()){
                tbm.addRow(new Object[]{
                    rs.getString("po"),rs.getString("upc"),rs.getInt("count"),rs.getDate("date")
                });
            }
        } catch (SQLException ex) {
            Logger.getLogger(scanUpc.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable DATA;
    private javax.swing.JTextField PO;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField upcScan;
    private javax.swing.JTextField upcUnscan;
    // End of variables declaration//GEN-END:variables
}
