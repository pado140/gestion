/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package view;

import connection.ConnectionDb;
import java.awt.Font;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.filechooser.FileSystemView;
import javax.swing.table.DefaultTableModel;
import observateurs.Observateurs;
import observateurs.Observe;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

/**
 *
 * @author Duvers
 */
public class Bundle_old extends javax.swing.JInternalFrame implements Observe{
       private final ConnectionDb conn = ConnectionDb.instance();
       private Map<String , Integer> po=new HashMap<>();
       private Observateurs observa=new lot(null,false),observa1=new TO_WIP(null,false);
       private Set<Object[]> liste;
       private DefaultTableModel tbm;
    /**
     * Creates new form Bundle
     */
    public Bundle_old() {
        initComponents();
        ajouterObservateur(observa);
        ajouterObservateur(observa1);
        tbm = (DefaultTableModel) grid_bundle.getModel();
        mostrarDatos();
        
    }

    
     public void mostrar(){
         
     }
     public void mostrarDatos(){
    
               liste=new HashSet<>();
               grid_bundle.getTableHeader().setFont( new Font( "Arial" , Font.BOLD, 13 ));
               
               tbm.setRowCount(0);
               
               String query = "SELECT * from sewing_travel where status='7'";
                try {
               ResultSet rs = conn.select(query);
               
               while (rs.next()){
                   String sku=rs.getString("sku");
                   String size=sku.substring(sku.lastIndexOf(".")+1).trim();
                   /*if(rs.getString("description").toLowerCase().contains("yth")||
                   rs.getString("description").toLowerCase().contains("youth")||
                   rs.getString("description").toLowerCase().contains("girls"))
                   size="Y"+size;*/
                String color,Code;
               color=rs.getString("color").trim();
               Code=rs.getString("color_code").trim();
             
                   Object[] data=new Object[10];
                   data[0]=rs.getString("sewing_card");
                   data[1]=rs.getString("po");
                   data[2]=rs.getString("style");
                   data[3]=rs.getString("description");
                   data[4]=Code;
                   data[5]=color;
                   data[6]=size;
                   data[7]=rs.getString("qty_cut");
                   data[8]=rs.getString("sewing_card");
                   data[9]=rs.getInt("id_sewing");
                   liste.add(data);
                   tbm.addRow(data);
               }
           } catch (SQLException ex) {
               Logger.getLogger(Bundle.class.getName()).log(Level.SEVERE, null, ex);
           }
           
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        popup = new javax.swing.JPopupMenu();
        gen = new javax.swing.JMenuItem();
        mod = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid_bundle = new javax.swing.JTable();
        potext = new javax.swing.JTextField();
        style_txt = new javax.swing.JTextField();
        col_txt = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        gen.setText("Generate bundle barcode");
        gen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                genActionPerformed(evt);
            }
        });
        popup.add(gen);

        mod.setText("Issue to WIP");
        mod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modActionPerformed(evt);
            }
        });
        popup.add(mod);

        setClosable(true);
        setIconifiable(true);
        setTitle("Bundle");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeactivated(evt);
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameDeiconified(evt);
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        grid_bundle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Record", "PO", "STYLE", "DESCRIPTION", "COLOR_CODE", "COLOR", "SIZE", "QTY", "BARCODE", "id"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grid_bundle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                grid_bundleMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(grid_bundle);
        if (grid_bundle.getColumnModel().getColumnCount() > 0) {
            grid_bundle.getColumnModel().getColumn(9).setMinWidth(0);
            grid_bundle.getColumnModel().getColumn(9).setPreferredWidth(0);
            grid_bundle.getColumnModel().getColumn(9).setMaxWidth(0);
        }

        potext.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                potextKeyReleased(evt);
            }
        });

        style_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                style_txtKeyReleased(evt);
            }
        });

        col_txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                col_txtKeyReleased(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/icon/export.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(109, 109, 109)
                        .addComponent(potext, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(style_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(col_txt, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 328, Short.MAX_VALUE)
                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(potext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(style_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(col_txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void genActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_genActionPerformed
        // TODO add your handling code here:
        Object[] data=new Object[8];
        
        int ligne=grid_bundle.getSelectedRow();
        data[0]=grid_bundle.getValueAt(ligne, 1);
        data[1]=grid_bundle.getValueAt(ligne, 2);
        data[2]=grid_bundle.getValueAt(ligne, 4);
        data[3]=grid_bundle.getValueAt(ligne, 5);
        data[4]=grid_bundle.getValueAt(ligne, 6);
        data[5]=grid_bundle.getValueAt(ligne, 7);
        data[6]=grid_bundle.getValueAt(ligne, 0);
        data[7]=grid_bundle.getValueAt(ligne, 9);
        
        alerter("generate lot",data);
        ((JDialog)observa).setModal(true);
        ((JDialog)observa).setVisible(true);
    }//GEN-LAST:event_genActionPerformed

    private void grid_bundleMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_grid_bundleMouseClicked
        // TODO add your handling code here:
        if(evt.getButton()==3){
            if(!grid_bundle.getSelectionModel().isSelectionEmpty()){
                popup.removeAll();
             if(!hasTicket(grid_bundle.getValueAt(grid_bundle.getSelectedRow(), 0).toString())){   
            
            popup.add(gen);
             }
             else{
                 popup.add(gen);
                     popup.add(mod);
                 
             }
        popup.show(grid_bundle, evt.getX(), evt.getY());
            }
        }
    }//GEN-LAST:event_grid_bundleMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser file=new JFileChooser("C:/",FileSystemView.getFileSystemView());
        file.setDialogTitle("enregistre le fichier");
        
        file.setFileFilter(new FileNameExtensionFilter("Workbook excel","xlsx","xls"));
        int returnAct=file.showSaveDialog(this);
        if(returnAct==JFileChooser.APPROVE_OPTION){
            XSSFWorkbook wb = new XSSFWorkbook();
        XSSFSheet sheet = wb.createSheet("cutting card");
        
        //Create some data to build the pivot table on
        setCellData(sheet,grid_bundle);
        
        FileOutputStream fileOut;
        try {
            String name=file.getSelectedFile().getAbsolutePath();
            if(!name.endsWith(".xlsx"))
                name=file.getSelectedFile().getAbsolutePath()+".xlsx";
            System.out.println(name);
            fileOut = new FileOutputStream(name);
            wb.write(fileOut);
        fileOut.close();
        wb.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Bundle.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Bundle.class.getName()).log(Level.SEVERE, null, ex);
        }
            JOptionPane.showMessageDialog(null, "File saved with success");
        }
       
    }//GEN-LAST:event_jButton1ActionPerformed

    private void filtre(String po,String style,String code){
        tbm.setRowCount(0);
        for(Object[] o:liste){
            if(o[1].toString().toLowerCase().trim().contains(po.toLowerCase().trim())&&
                    o[2].toString().toLowerCase().trim().contains(style.toLowerCase().trim())&&
                    o[4].toString().toLowerCase().trim().contains(code.toLowerCase().trim())){
                tbm.addRow(o);
            }
        }
    }
    private void modActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modActionPerformed
        // TODO add your handling code here:
        Object[] data=new Object[8];
        
        int ligne=grid_bundle.getSelectedRow();
        data[0]=grid_bundle.getValueAt(ligne, 1);
        data[1]=grid_bundle.getValueAt(ligne, 2);
        data[2]=grid_bundle.getValueAt(ligne, 4);
        data[3]=grid_bundle.getValueAt(ligne, 5);
        data[4]=grid_bundle.getValueAt(ligne, 6);
        data[5]=grid_bundle.getValueAt(ligne, 7);
        data[6]=grid_bundle.getValueAt(ligne, 0);
        data[7]=grid_bundle.getValueAt(ligne, 9);
        
        alerter("issued",data);
        ((JDialog)observa1).setModal(true);
        ((JDialog)observa1).setVisible(true);
        mostrarDatos();
        filtre(potext.getText(),style_txt.getText(),col_txt.getText());
    }//GEN-LAST:event_modActionPerformed

    private void formInternalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeactivated
        // TODO add your handling code here:
        mostrarDatos();
    }//GEN-LAST:event_formInternalFrameDeactivated

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        // TODO add your handling code here:
        mostrarDatos();
    }//GEN-LAST:event_formInternalFrameActivated

    private void formInternalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameDeiconified
        // TODO add your handling code here:
        mostrarDatos();
    }//GEN-LAST:event_formInternalFrameDeiconified

    private void potextKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_potextKeyReleased
        // TODO add your handling code here:
        filtre(potext.getText(),style_txt.getText(),col_txt.getText());
    }//GEN-LAST:event_potextKeyReleased

    private void style_txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_style_txtKeyReleased
        // TODO add your handling code here:
        filtre(potext.getText(),style_txt.getText(),col_txt.getText());
    }//GEN-LAST:event_style_txtKeyReleased

    private void col_txtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_col_txtKeyReleased
        // TODO add your handling code here:
        filtre(potext.getText(),style_txt.getText(),col_txt.getText());
    }//GEN-LAST:event_col_txtKeyReleased

    public void setCellData(XSSFSheet sheet,JTable table){
        Row row10=sheet.createRow(0);
        for(int j=0;j<table.getColumnCount();j++){
                Cell cells=row10.createCell(j);
                cells.setCellValue(table.getColumnName(j));
            }
        for(int i=0;i<table.getRowCount();i++){
            Row rows=sheet.createRow(1+i);
            Cell cellMar=rows.createCell(0);
            for(int j=0;j<table.getColumnCount();j++){
                Cell cells=rows.createCell(j);
                try{
                cells.setCellValue(table.getValueAt(i, j).toString());
                }catch(NullPointerException e){
                    
                }
            }
                
        }
    }
    
    public boolean hasTicket(String bundle){
        String requete="select count(*) nb from sew_prod where order_num=?";
        ResultSet rs = conn.select(requete,bundle);
        System.out.println(requete);       
           try {
               while (rs.next()){
                   if(rs.getInt("nb")>0)
                       return true;
               }
           } catch (SQLException ex) {
               Logger.getLogger(Bundle.class.getName()).log(Level.SEVERE, null, ex);
           }
           return false;
    }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField col_txt;
    private javax.swing.JMenuItem gen;
    private javax.swing.JTable grid_bundle;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JMenuItem mod;
    private javax.swing.JPopupMenu popup;
    private javax.swing.JTextField potext;
    private javax.swing.JTextField style_txt;
    // End of variables declaration//GEN-END:variables

    @Override
    public void ajouterObservateur(Observateurs ob) {
        obs.add(ob);
    }

    @Override
    public void retirerObservateur(Observateurs ob) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void alerter(Object... ob) {
        for(Observateurs o:obs)
            o.executer(ob);
    }
}
