/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionDb;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Map;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import observateurs.Observateurs;

/**
 *
 * @author Padovano
 */
public class User_rights extends javax.swing.JDialog implements Observateurs{

    private final ConnectionDb conn = ConnectionDb.instance();
    private Map<Integer,Boolean> rights;
    private DefaultTableModel tbm;
    /**
     * Creates new form User_rights
     */
    public User_rights(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        grid_data = new javax.swing.JTable();
        defaut = new javax.swing.JButton();
        save = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("User Authorizations");

        jLabel2.setText("Username:");

        username.setText("jTextField1");
        username.setEnabled(false);

        jLabel3.setText("Full Name:");

        name.setText("jTextField2");
        name.setEnabled(false);

        grid_data.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "id", "Actions", "Execute/Enable"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        grid_data.getTableHeader().setResizingAllowed(false);
        grid_data.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(grid_data);
        if (grid_data.getColumnModel().getColumnCount() > 0) {
            grid_data.getColumnModel().getColumn(0).setMinWidth(0);
            grid_data.getColumnModel().getColumn(0).setMaxWidth(0);
        }

        defaut.setText("reset to default");
        defaut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defautActionPerformed(evt);
            }
        });

        save.setText("Save");
        save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveActionPerformed(evt);
            }
        });

        jButton1.setText("select all");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(98, 98, 98)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 487, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 142, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(defaut)
                .addGap(18, 18, 18)
                .addComponent(save)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(66, 66, 66))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(defaut)
                    .addComponent(save)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void defautActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defautActionPerformed
        // TODO add your handling code here:
        String requete="select * from actions_key";
        ResultSet rs=conn.select(requete);
        tbm=(DefaultTableModel)grid_data.getModel();
        tbm.setRowCount(0);
        try {
            while(rs.next()){
                Object data[]=new Object[3];
                data[0]=rs.getInt("id");
                data[1]=rs.getString("action")+"."+rs.getString("field");
                
                    data[2]=false;
                tbm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(User_rights.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_defautActionPerformed

    private void saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveActionPerformed
        // TODO add your handling code here:
        String requete="insert into user_right(enable,user_id,action) values(?,?,?)";
        /*    if(!rights.isEmpty())
        requete="update user_right set enable=? where user_id=? and action=?";
        */
        
        for(int i=0;i<grid_data.getRowCount();i++){
            System.out.println(grid_data.getValueAt(i, 2));
            if(grid_data.getValueAt(i, 2)!=null){
               
            conn.Update(requete, 1, grid_data.getValueAt(i, 2),user_id,grid_data.getValueAt(i, 0));
            rights.put((Integer)grid_data.getValueAt(i, 0),(Boolean)grid_data.getValueAt(i, 2));
            }
        }
        JOptionPane.showMessageDialog(this, "Successfully Saved");
        tbm=(DefaultTableModel)grid_data.getModel();
        tbm.setRowCount(0);
    }//GEN-LAST:event_saveActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        for(int i=0;i<grid_data.getRowCount();i++){
            grid_data.setValueAt(true,i, 2);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private Map<Integer,Boolean> getUserRight(int user){
        String requete="select * from user_right where user_id=?";
        Map<Integer,Boolean> privileges=new TreeMap<>();
        ResultSet rs=conn.select(requete,user);
        
        try {
            while(rs.next()){
               privileges.put(rs.getInt("action"), rs.getBoolean("enable"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(User_rights.class.getName()).log(Level.SEVERE, null, ex);
        }
        return privileges;
    }
    
    private void load(){
        String requete="select * from actions_key";
        ResultSet rs=conn.select(requete);
        tbm=(DefaultTableModel)grid_data.getModel();
        tbm.setRowCount(0);
        try {
            while(rs.next()){
                Object data[]=new Object[3];
                data[0]=rs.getInt("id");
                data[1]=rs.getString("action")+"."+rs.getString("field");
                
                try{
               Boolean check=rights.get(rs.getInt("id"));
               data[2]=check;
                }catch(NullPointerException e){
                    data[2]=false;
                }
                tbm.addRow(data);
            }
        } catch (SQLException ex) {
            Logger.getLogger(User_rights.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }
    
    private boolean hasRight(int user,int action){
        String requete="select * from user_right where user_id=? and action=?";
        ResultSet rs=conn.select(requete,user,action);
        
        try {
            while(rs.next()){
               return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(User_rights.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton defaut;
    private javax.swing.JTable grid_data;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField name;
    private javax.swing.JButton save;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

    private int user_id;

    @Override
    public void executer(Object... obs) {
        
        if(obs[0].toString().equals("rights")){
            user_id=(Integer)obs[1];
            username.setText(obs[2].toString());
            name.setText(obs[3].toString());
            rights=this.getUserRight(user_id);
            load();
            this.setVisible(true);
        }
    }
    
}
