/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import connection.ConnectionDb;
import java.awt.Font;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Padovano
 */
public class At_soabar_old extends javax.swing.JInternalFrame {
private final ConnectionDb conn = ConnectionDb.instance();
private DefaultTableModel tbm;
    /**
     * Creates new form Confirm_at_soabar
     */
    public At_soabar_old() {
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        GRID_DATA = new javax.swing.JTable();

        setClosable(true);
        setTitle("At soa bar");

        jLabel1.setText("SCAN SEWING:");

        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });

        jButton1.setText("Refresh");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(38, 38, 38))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(20, 20, 20))))
        );

        GRID_DATA.setAutoCreateRowSorter(true);
        GRID_DATA.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "SEWING TRAVELLER", "PO", "STYLE", "COLOR", "SIZE", "QTY", "SEWING CARD"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, true, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(GRID_DATA);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1031, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
        // TODO add your handling code here:
        if(evt.getKeyCode()==10){
            System.out.println(evt.getKeyCode()==10);
            //if(!jTextField1.getText().trim().isEmpty())
                get(jTextField1.getText().trim());
                mostrarData();
                jTextField1.setText("");
        }
    }//GEN-LAST:event_jTextField1KeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mostrarData();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void get(String sew){
    Object[] state=state(sew);
    boolean valid=true;
    if(state!=null){
        System.out.println(state[0]);
        if(!state[0].toString().matches("[A-Za-z]")){
    if(Integer.parseInt(state[0].toString())<9 && Integer.parseInt(state[0].toString())!=7){
        JOptionPane.showMessageDialog(this, "this travel card is never transfer from the cutting");
        valid=false;
    }else if(Integer.parseInt(state[0].toString())==7){
        JOptionPane.showMessageDialog(this, "this travel card is alredy transfer to Sewing");
        valid=false;
    }
    }else{
            if(state[0].equals("H")){
                JOptionPane.showMessageDialog(this, "this travel card is alredy transfer to Heat transfer / Pad Print");
                valid=false;
            }
    }
        if(valid){
        String requete="update order_master set status_10='H' where ORDNUM_10=?";
        if(!conn.Update(requete, 0, sew))
            JOptionPane.showMessageDialog(this, conn.getErreur(), "Fatal Error", JOptionPane.ERROR_MESSAGE);
        else{
            String requete1="insert into tRANSAC(TRANSACT,ITEM,QTY,ACT_TYPE,ACT_NAME,[DATE_T],User_id) values ('At Soa bar',?,?,1,'Soa Bar'"
                    + ",getdate(),?)";
            if(!conn.Update(requete1, 0, sew,state[1],Principal.user_id))
            JOptionPane.showMessageDialog(this, conn.getErreur(), "Fatal Error", JOptionPane.ERROR_MESSAGE);
        }
    }
    }
}
    private void init(){
        GRID_DATA.getTableHeader().setFont( new Font( "Arial" , Font.BOLD, 13 ));
        tbm = (DefaultTableModel) GRID_DATA.getModel();
       mostrarData();
    }
    
    private Object[] state(String sewing){
        String query = "SELECT * from sewing_travel where sewing_card=?";
        ResultSet rs = conn.select(query,sewing);
        try {
        while (rs.next()){
            return new Object[]{rs.getString("status"),rs.getInt("qty_cut")};
        }
    } catch (SQLException ex) {
        Logger.getLogger(At_soabar.class.getName()).log(Level.SEVERE, null, ex);
    }
        return null;
    }
    
    private void mostrarData(){
        tbm.setRowCount(0);
         String query = "SELECT * from sewing_travel where status='9'";
            ResultSet rs = conn.select(query);
               
    try {
        while (rs.next()){
            String color,Code;
            
               Code=rs.getString("color_code").trim();
               color=Code+"-"+rs.getString("color").trim();
             
                   Object[] data=new Object[7];
                   data[0]=rs.getString("sewing_traveler");
                   data[1]=rs.getString("po");
                   data[2]=rs.getString("style");
                   data[3]=color;
                   data[4]=rs.getString("size");
                   data[5]=rs.getString("qty_cut");
                   data[6]=rs.getString("sewing_card");
                   tbm.addRow(data);
        }
    } catch (SQLException ex) {
        Logger.getLogger(At_soabar.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable GRID_DATA;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
